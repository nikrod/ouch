<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// PULL RESOURCES

// THE CODE IN THIS CREATE EVENT IS FOR DEMO SETUP ONLY.
// THE DEMO TUTORIAL NOTES CAN BE FOUND UNDER "BTN RELEASED" IN THE STEP EVENT OF THIS OBJECT


// NOW IF YOU'LL EXCUSE ME, I NEED TO GET BACK TO SETTING UP THIS DEMO...
var state = true;
if ( file_exists( "VideoPlay/Demos/Demo_all/bg_demos.png" ) )
    {
    global.bg_demo_all = background_add( "VideoPlay/Demos/Demo_all/bg_demos.png", false, false );
    }
else
    {
    state = false;
    }
    
if ( file_exists( "VideoPlay/Demos/Demo_all/fnt_btns.otf" ) )
    {
    global.fnt_demo_large = font_add( "VideoPlay/Demos/Demo_all/fnt_btns.otf", 20, 0, 0, 32, 127 );
    global.fnt_demo_small = font_add( "VideoPlay/Demos/Demo_all/fnt_btns.otf", 12, 0, 0, 32, 127 );
    }
else
    {
    state = false;
    }
    
if ( file_exists( "VideoPlay/Demos/Basic/Demo_1/spr_demo1_btn.png" ) )
    {
    global.spr_demo_1_btn = sprite_add( "VideoPlay/Demos/Basic/Demo_1/spr_demo1_btn.png", 1, 0, 0, 275, 42 );
    }
else
    {
    state = false;
    }
    
if ( file_exists( "VideoPlay/Demos/Basic/Demo_1/spr_demo1_btn_pressed.png" ) )
    {
    global.spr_demo_1_btn_pressed = sprite_add( "VideoPlay/Demos/Basic/Demo_1/spr_demo1_btn_pressed.png", 1, 0, 0, 275, 42 );
    }
else
    {
    state = false;
    }


if ( state )
    {
    background_index[ 0 ] = global.bg_demo_all;
    background_visible[ 0 ] = true;
    sprite_collision_mask( global.spr_demo_1_btn, true, 1, 0, 0, 0, 0, 0, 0);
    sprite_collision_mask( global.spr_demo_1_btn_pressed, true, 1, 0, 0, 0, 0, 0, 0);
    }
else
    {
    show_debug_message( "Error Loading Demo Files: Demo_1" );
    show_message( "Error: Some Demo files are missing for -Demo_1-#Try re-importing the Demo files and try again" );
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SETUP

// NO SERIOUSELY! THIS IS ALL JUST SETUP CODE. NOTHING EXCITING GOING ON HERE..
// SO... GO ON! MOVE ALONG!

sprite_index = global.spr_demo_1_btn;
text_col = c_white;
sprite_set_offset( sprite_index, sprite_width /2, sprite_height /2 );
x = room_width /2;
y = room_height /2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEVICE BACK HWB

if ( keyboard_check_released( vk_backspace ) )
    {
    game_end();
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEMO_1 VideoPlay Android


// THE DEMO TUTORIAL NOTES CAN BE FOUND UNDER "BTN RELEASED" IN THE STEP EVENT
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN PRESSED

if ( device_mouse_check_button( 0, mb_left ) ) &amp;&amp; ( position_meeting( device_mouse_x( 0 ), device_mouse_y( 0 ), id ) )
    {
    sprite_index = global.spr_demo_1_btn_pressed;
    text_col = c_gray;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN RELEASED

if ( device_mouse_check_button_released( 0, mb_left ) )
    {
    if ( position_meeting( device_mouse_x( 0 ), device_mouse_y( 0 ),  id ) )
        {
        // RESET BTN IMAGE INDEX
        sprite_index = global.spr_demo_1_btn;
        text_col = c_white;
        
        
        /*
        ----------------------------------------------------------------------------------------------------
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        |                                                                                                  |
        |                                      -VIDEOPLAY DEMO_1-                                          |
        |                             -THE BASICS OF FULLSCREEN PLAYBACK-                                  |
        |                                                                                                  |
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        ----------------------------------------------------------------------------------------------------
        
        IN THIS DEMO WE WILL BEGIN WITH SIMPLE FULLSCREEN VIDEO PLAYBACK. THIS IS THE MOST POPULAR
        WAY OF PRESENTING YOUR VIDEO AS IT CAN BE USED FOR PLAYING FULL MOTION LOGOS, INTRO VIDEOS
        AND CUT-SCENES IN YOUR ANDROID PROJECT.
        WE CAN ACHIEVE THIS KIND OF RESULT BY USING THREE OF VIDEOPLAYS FUNCTIONS:
        
            1. videoplay_android_set_background( "colour" );
            - SET BACKGROUND COLOUR TO HELP MAKE THE VIDEO MORE PRESENTABLE -
            
            2. videoplay_android_set_ctrl( type );
            - SET THE CONTROL TYPE FOR VIDEO PLAYBACK -
            
            3. videoplay_android( "filename" );
            - EXECUTE VIDEO PLAYBACK -
            
            
        SO LETS PUT THESE INTO PRACTICE.
        */
        videoplay_android_set_debugging( true );
        
        // OUR VIDEO MAY NOT FIT PERFECTLY ON ALL DEVICES, SO WE WILL SET ANY ENVELOPING COLOUR TO BLACK.
        
        videoplay_android_set_background( "c_black" );
        
        
                        
        // FOR THIS EXAMPLE WE DO NOT WANT THE CONTROLS TO BE DISPLAYED AS THEY WILL GET IN THE WAY OF OUR VIDEO,
        // SO WE WILL TURN OFF VIDEO CONTROLS COMPLETELY.
        
        videoplay_android_set_ctrl( 0 );
                        
        
        
        // WE CAN NOW BEGIN PLAYBACK OF OUR VIDEO.
        
        videoplay_android( "VideoPlay/Demos/sample_video.mp4" );
        
        
        
        
        /* 
        WITH THESE THREE FUNCTIONS, WE HAVE SUCCESSFULLY ACHIEVED THE BASICS OF FULLSCREEN VIDEO PLAYBACK.
        
        ----------------------------------------------------------------------------------------------------
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        |                                                                                                  |
        |                                      -VIDEOPLAY DEMO_1-                                          |
        |                             -THE BASICS OF FULLSCREEN PLAYBACK-                                  |
        |                                                                                                  |
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        ----------------------------------------------------------------------------------------------------
        */
        }
    else
        {
        // RESET BTN IMAGE INDEX
        sprite_index = global.spr_demo_1_btn;
        text_col = c_white;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN DRAW
draw_self();

draw_set_font( global.fnt_demo_large );
draw_set_halign( fa_center );
draw_set_valign( fa_middle );
draw_set_colour( text_col );
draw_text( x, y, "SHOW SPLASH VIDEO" );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INFO DRAW

draw_set_font( global.fnt_demo_small );
draw_set_halign( fa_left );
draw_set_valign( fa_top );
draw_set_colour( c_white );
draw_text_ext(  30, 
                120, 
                "-- THE BASICS OF FULLSCREEN PLAYBACK --##IN THIS DEMO WE WILL BEGIN WITH SIMPLE FULLSCREEN VIDEO PLAYBACK. THIS IS THE MOST POPULAR WAY OF PRESENTING YOUR VIDEO AS IT CAN BE USED FOR PLAYING FULL MOTION LOGOS, INTRO VIDEOS AND CUT-SCENES IN YOUR ANDROID PROJECT.### See BTN RELEASE in the STEP EVENT of Demo_1 for code details.", 
                16, 
                500 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
