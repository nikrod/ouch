<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// PULL RESOURCES

// THE CODE IN THIS CREATE EVENT IS FOR DEMO SETUP ONLY.
// THE DEMO TUTORIAL NOTES CAN BE FOUND UNDER "BTN RELEASED" IN THE STEP EVENT OF THIS OBJECT


// NOW IF YOU'LL EXCUSE ME, I NEED TO GET BACK TO SETTING UP THIS DEMO...
var state = true;
if ( file_exists( "VideoPlay/Demos/Demo_all/bg_demos.png" ) )
    {
    global.bg_demo_all = background_add( "VideoPlay/Demos/Demo_all/bg_demos.png", false, false );
    }
else
    {
    state = false;
    }
    
if ( file_exists( "VideoPlay/Demos/Demo_all/fnt_btns.otf" ) )
    {
    global.fnt_demo_large = font_add( "VideoPlay/Demos/Demo_all/fnt_btns.otf", 20, 0, 0, 32, 127 );
    global.fnt_demo_small = font_add( "VideoPlay/Demos/Demo_all/fnt_btns.otf", 12, 0, 0, 32, 127 );
    }
else
    {
    state = false;
    }
    
if ( file_exists( "VideoPlay/Demos/Basic/Demo_2/spr_demo2_btn.png" ) )
    {
    global.spr_demo_2_btn = sprite_add( "VideoPlay/Demos/Basic/Demo_2/spr_demo2_btn.png", 1, 0, 0, 275, 42 );
    }
else
    {
    state = false;
    }
    
if ( file_exists( "VideoPlay/Demos/Basic/Demo_2/spr_demo2_btn_pressed.png" ) )
    {
    global.spr_demo_2_btn_pressed = sprite_add( "VideoPlay/Demos/Basic/Demo_2/spr_demo2_btn_pressed.png", 1, 0, 0, 275, 42 );
    }
else
    {
    state = false;
    }


if ( state )
    {
    background_index[ 0 ] = global.bg_demo_all;
    background_visible[ 0 ] = true;
    sprite_collision_mask( global.spr_demo_2_btn, true, 1, 0, 0, 0, 0, 0, 0);
    sprite_collision_mask( global.spr_demo_2_btn_pressed, true, 1, 0, 0, 0, 0, 0, 0);
    }
else
    {
    show_debug_message( "Error Loading Demo Files: Demo_2" );
    show_message( "Error: Some Demo files are missing for -Demo_2-#Try re-importing the Demo files and try again" );
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SETUP

// NO SERIOUSELY! THIS IS ALL JUST SETUP CODE. NOTHING EXCITING GOING ON HERE..
// SO... GO ON! MOVE ALONG!

sprite_index = global.spr_demo_2_btn;
text_col = c_white;
sprite_set_offset( sprite_index, sprite_width /2, sprite_height /2 );
x = room_width /2;
y = room_height /2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEMO_2 VideoPlay Android


// THE DEMO TUTORIAL NOTES CAN BE FOUND UNDER "BTN RELEASED" IN THE STEP EVENT
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN PRESSED

if ( device_mouse_check_button( 0, mb_left ) ) &amp;&amp; ( position_meeting( device_mouse_x( 0 ), device_mouse_y( 0 ), id ) )
    {
    sprite_index = global.spr_demo_2_btn_pressed;
    text_col = c_gray;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN RELEASED

if ( device_mouse_check_button_released( 0, mb_left ) )
    {
    if ( position_meeting( device_mouse_x( 0 ), device_mouse_y( 0 ),  id ) )
        {
        // RESET BTN IMAGE INDEX
        sprite_index = global.spr_demo_2_btn;
        text_col = c_white;
        
        
        /*
        ----------------------------------------------------------------------------------------------------
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        |                                                                                                  |
        |                                      -VIDEOPLAY DEMO_2-                                          |
        |                             -THE BASICS OF FLOATING VIDEO-                                       |
        |                                                                                                  |
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        ----------------------------------------------------------------------------------------------------
        
        IN THIS DEMO WE WILL BE LOOKING AT PLAYING A FLOATING VIDEO. THIS WILL DISPLAY OUR VIDEO ABOVE OUR APP/GAME
        SO THAT THE APP/GAME IS STILL VISIBLE AND INTERACTIVE IN THE BACKGROUND.
        
        TO ACHIEVE THIS WE USE THE FOLLOWING FUNCTION TO SET PLAYBACK TO WINDOW MODE:
        
            videoplay_android_window( true ):
            
        HOWEVER LETS USE SOME OF VIDEOPLAY'S SETTERS TO CUSTOMIZE THE VIDEO WINDOW TO OUR LIKING.
        
            1. videoplay_android_set_ctrl( type );
            - SET THE CONTROL TYPE FOR VIDEO PLAYBACK -
            
            2. videoplay_android_set_scale( width, height );
            - SET THE WINDOW SCALE -
            
            3. videoplay_android_set_position( x, y );
            - SET THE POSIION THE WINDOW WILL DIPLAY ON SCREEN -
            
            4. videoplay_android_window( true );
            - SET WINDOW MODE TO TURE
            
            5. videoplay_android( "sample_video.mp4" );
            - EXECUTE VIDEO PLAYBACK -
            
        SO LETS PUT THESE INTO PRACTICE.
        */
        
        
        // FOR THIS EXAMPLE WE DO NOT REQUIRE ANY CONTROLS.
        videoplay_android_set_ctrl( 0 );
                        
        // WE WILL SET THE VIDEO SCALE SMALL.
        videoplay_android_set_scale( 300, 200 );
                        
        // WE CAN ALSO SET THE POSITION TO ANYWHERE WE WOULD LIKE.
        videoplay_android_set_position( 100, 50 );
        
        // NOW THAT WE ARE ALL SETUP, LETS SET TURN ON WINDOW MODE
        videoplay_android_set_window( true );
        
        // WE CAN NOW CALL OUR EXECUTE FUNCTION. THE VIDEO WE WILL BE PLAYING 
        // IS LOCATED LOCALLY ( INCLUDED FILES "DATA" DIRECTORY ) SO WE WILL USE:
        videoplay_android( "VideoPlay/Demos/sample_video.mp4" );
        
        
        
        
        /* 
        WITH THESE FIVE FUNCTIONS, WE HAVE SUCCESSFULLY ACHIEVED THE BASICS OF FLOATING WINDOWS.
        
        ----------------------------------------------------------------------------------------------------
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        |                                                                                                  |
        |                                      -VIDEOPLAY DEMO_1-                                          |
        |                             -THE BASICS OF FULLSCREEN PLAYBACK-                                  |
        |                                                                                                  |
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        ----------------------------------------------------------------------------------------------------
        */
        }
    else
        {
        // RESET BTN IMAGE INDEX
        sprite_index = global.spr_demo_2_btn;
        text_col = c_white;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEVICE BACK HWB

if ( keyboard_check_released( vk_backspace ) )
    {
    game_end();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN DRAW
draw_self();

draw_set_font( global.fnt_demo_large );
draw_set_halign( fa_center );
draw_set_valign( fa_middle );
draw_set_colour( text_col );
draw_text( x, y, "SHOW FLOATING WINDOW" );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INFO DRAW

draw_set_font( global.fnt_demo_small );
draw_set_halign( fa_left );
draw_set_valign( fa_top );
draw_set_colour( c_white );
draw_text_ext(  30, 
                120, 
                "-- THE BASICS OF FLOATING VIDEO --##IN THIS DEMO WE WILL BE LOOKING AT PLAYING A FLOATING VIDEO. THIS WILL DISPLAY OUR VIDEO ABOVE OUR APP/GAME SO THAT THE APP/GAME IS STILL VISIBLE AND INTERACTABLE IN THE BACKGROUND.### See BTN RELEASE in the STEP EVENT of Demo_2 for code details.", 
                16, 
                500 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
