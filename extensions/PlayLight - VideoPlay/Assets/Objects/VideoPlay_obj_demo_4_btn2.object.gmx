<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SETUP

// NO SERIOUSELY! THIS IS ALL JUST SETUP CODE. NOTHING EXCITING GOING ON HERE..
// SO... GO ON! MOVE ALONG!

sprite_index = global.spr_demo_4_btn;
text_col = c_white;
sprite_set_offset( sprite_index, sprite_width /2, sprite_height /2 );
x = room_width - 300;
y = room_height /2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEMO_4 VideoPlay Android


// THE DEMO TUTORIAL NOTES CAN BE FOUND UNDER "BTN RELEASED" IN THE STEP EVENT
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN PRESSED

if ( device_mouse_check_button( 0, mb_left ) ) &amp;&amp; ( position_meeting( device_mouse_x( 0 ), device_mouse_y( 0 ), id ) )
    {
    sprite_index = global.spr_demo_4_btn_pressed;
    text_col = c_gray;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN RELEASED

if ( device_mouse_check_button_released( 0, mb_left ) )
    {
    if ( position_meeting( device_mouse_x( 0 ), device_mouse_y( 0 ),  id ) )
        {
        // RESET BTN IMAGE INDEX
        sprite_index = global.spr_demo_4_btn;
        text_col = c_white;
        
        
        /*
        ----------------------------------------------------------------------------------------------------
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        |                                                                                                  |
        |                                      -VIDEOPLAY DEMO_1-                                          |
        |                             -THE INTERMEDIATES OF QUEUING VIDEO-                                 |
        |                                                                                                  |
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        ----------------------------------------------------------------------------------------------------
        
        CONTINUED...
        
        
        */
        
        // ONCE WE HAVE ALL OUR VIDEOS IN THE QUE LIST, WE CAN BEGIN OUR QUE LIST PLAYBACK.
        // I WILL WRAP THIS CODE IN AN "IF" STATEMENT AND USE THE VIDEOPLAY FUNCTION:
        // VIDEOPLAY_ANDROID_QUE_SIZE();    
        // TO CHECK THAT THERE ARE ACTUALLY VIDEOS TO PLAY WITHIN THE QUE LIST.
        
        if ( videoplay_android_que_size() &gt; 0 )
            {
            videoplay_android_que_play();
            }
        else
            {
            show_message( "Que List is empty." );
            }
        
        
        
        /* 
        WITH THIS COMPLETE, WE HAVE SUCCESSFULLY ACHIEVED THE INTERMEDIATES OF QUEUING VIDEO.
        
        ----------------------------------------------------------------------------------------------------
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        |                                                                                                  |
        |                                      -VIDEOPLAY DEMO_1-                                          |
        |                             -THE INTERMEDIATES OF QUEUING VIDEO-                                 |
        |                                                                                                  |
        |  //////////////////////////////////////////////////////////////////////////////////////////////  |
        ----------------------------------------------------------------------------------------------------
        */
        }
    else
        {
        // RESET BTN IMAGE INDEX
        sprite_index = global.spr_demo_4_btn;
        text_col = c_white;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEVICE BACK HWB

if ( keyboard_check_released( vk_backspace ) )
    {
    game_end();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BTN DRAW
draw_self();

draw_set_font( global.fnt_demo_large );
draw_set_halign( fa_center );
draw_set_valign( fa_middle );
draw_set_colour( text_col );
draw_text( x, y, "PLAY QUE LIST" );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
